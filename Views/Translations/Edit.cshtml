@model Inscript_v5.Models.TranslationsModel

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script>

    $(document).ready(function () {
        $("#submitBothForms").click(function () {
            $.ajax({
                url: "/Translations/Edit",
                type: 'POST',
                data: $("#TranslationDetails").serialize(),
                success: function (data) {
                    console.log("submitBothForms success");

                    // Run the submitAllBtn function
                    submitAllBtnFunction();
                },
                error: function () {

                }
            });
        });

        function submitAllBtnFunction() {
            var forms = $(".ajax-form");
            var totalForms = forms.length;
            var formsProcessed = 0; // Initialize the counter for processed forms
            var errorsOccurred = false; // Track if any errors

            function displayMessage(message) {
                // Create a new <p> element with the message text
                var messageElement = $("<p>").text(message);

                // Append the <p> element to the message container
                $("#messageContainer").append(messageElement);
            }

            forms.each(function (index, form) {
                var formData = new FormData(form);

                $.ajax({
                    url: "/TranslationText/Create",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (result) {
                        console.log("Form " + (index + 1) + " submitted successfully");
                        if (++formsProcessed === totalForms && !errorsOccurred) {
                            console.log("All forms submitted successfully.");
                            window.location.href = "/Translations/AdminIndex";

                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Form " + (index + 1) + " submission error:", error);
                        $("#successMessage").text("Error").show();

                        errorsOccurred = true;

                        if (++formsProcessed === totalForms) {
                            var errorMessage = "All forms processed with errors.";
                            console.log(errorMessage);
                            displayMessage(errorMessage);
                            $("#successMessage").text("Error").show();
                        }
                    }
                });
            });
        }
    });

</script>


<h1 class="center">Create Translation</h1>
<hr />

<body>
    <div class="flex-container">
        <div class="card" style="width: 49%; margin: 0 auto; margin-left: 5px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2); padding: 10px;">
            <!-- User Projects-->
            @{Html.RenderAction("InscriptionDetails", "Inscriptions", new { id = Model.InscriptionID });}
            @{Html.RenderAction("Details", "InscriptionText", new { id = Model.InscriptionID });}
            <br />
            <br />
            <hr />
            @{Html.RenderAction("InscriptionNotes", "Inscriptions", new { id = Model.InscriptionID });}
        </div>
        <div class="card" style="width: 49%; margin: 0 auto; margin-left: 5px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2); padding: 10px;">
            <!-- Saved Inscriptions-->
            @{Html.RenderAction("Create", "TranslationText", new { id = Model.TranslationID });}

            <br />
            <!-- Translation Details -->
            @using (Ajax.BeginForm("Edit", new { }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "TranslationsModel" }, new { @id = "TranslationDetails" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.InscriptionID)
                @Html.HiddenFor(model => model.CreatedByUserID)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TranslationID)
                <div class="form-group">
                    <h6>Translation Name</h6>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.TranslationName, new { htmlAttributes = new { @class = "form-control col-md-5" } })
                        @Html.ValidationMessageFor(model => model.TranslationName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <h6>Translation Notes</h6>
                    @Html.TextAreaFor(model => model.Notes, new { @class = "custom-textarea", rows = 4, cols = 60 })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <br />
                    @Html.LabelFor(model => model.PublicView, "Make Translation Public?", htmlAttributes: new { @class = "control-label" })
                    @Html.CheckBoxFor(model => model.PublicView, new { @class = "form-check-input" })
                    @Html.ValidationMessageFor(model => model.PublicView, "", new { @class = "text-danger" })
                </div>

            }
            <div>
                <button id="submitBothForms" value="Save" class="btn btn-default">Submit</button>
            </div>
        </div>
    </div>


</body>

<br />

<div>
    <form method="post" action="@Url.Action("Delete", "Translations", new { id = Model.TranslationID })">
        @Html.AntiForgeryToken()
        <input class="btn btn-outline-light" type="submit" value="Cancel" id="deleteButton" />
    </form>
</div>

<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


