@model Inscript_v5.Models.UsersModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit User</h2>



@using (Ajax.BeginForm("Edit", new { }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "UserModel" }, new { @id = "UserDetails" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <h5>User Information</h5>
    </div>

    <table>

        <tr>
            <td class="col-md-10">
                @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>

        <tr class="form-group">
            <td>
                @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>

        <tr class="form-group">
            <td>
                @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>

        <tr class="form-group">
            <td class="col-md-10">
                @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>

        <tr class="form-group">
            <td class="col-md-10">
                @Html.LabelFor(model => model.RoleID, "User Role", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Role, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>
    </table>


    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">


            <input type="submit" value="Submit" class="btn btn-default" />


        </div>
    </div>
}

<br />

<div>
    @Html.ActionLink("Cancel", "Index", "UserPortal")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

