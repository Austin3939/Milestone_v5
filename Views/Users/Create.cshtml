@model Inscript_v5.Models.UsersModel

@{
    ViewBag.Title = "Create";
}

<style>
    #createUser-div {
        position: center;
        left: 40%;
        padding: 10px 10px;
    }

    .card-width {
        width: 500px; /* Adjust the width as needed */
        position: center;
    }
</style>

<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        $("#UserDetails").submit(function () {
            var password = $("#Password").val();
            var confirmPassword = $("#ConfirmPassword").val();

            if (password.length < 8) {
                alert("Password must be at least 8 characters long.");
                return false;
            }

            if (!password.match(/[A-Za-z]/) || !password.match(/[0-9]/)) {
                alert("Password must contain at least one letter and one number.");
                return false;
            }

            if (password !== confirmPassword) {
                alert("Passwords do not match.");
                return false;
            }
        });
    });
</script>



<div class="card card-width" style="margin: 0 auto; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);">
    <h2 class="center">Create New User</h2>

    <div class="center" id="createUser-div">
        @using (Ajax.BeginForm("Create", new { }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "UserModel" }, new { @id = "UserDetails" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.RoleID)

            <div class="form-horizontal">
                <h5 class="center">User Information</h5>
            </div>

            <table>

                <tr class="form-group">
                    <td>
                        @Html.LabelFor(model => model.UserName, "User Name*", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <tr class="form-group">
                    <td>
                        @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <tr class="form-group">
                    <td>
                        @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <tr class="form-group">
                    <td>
                        @Html.LabelFor(model => model.Email, "Email*", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Email, null, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <tr class="form-group">
                    <td>
                        @Html.LabelFor(model => model.Password, "Password*", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } } )
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

                <tr class="form-group">
                    <td>
                        @Html.LabelFor(model => model.Password, "Confirm Password*", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr>

            </table>

            <div class="form-group center">
                <div style="margin-top: 5px;">
                    <input type="submit" value="Submit" class="btn btn-default" />
                    <p class="center" style="margin-top: 5px;">@Html.ActionLink("Cancel", "Index", "Home")</p>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
