@model Inscript_v5.Models.InscriptionTextModel

@{
    ViewBag.Title = "Create";
}

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script>
    $(document).ready(function () {
        var rowCount = 1;

        $("#addRowBtn").click(function () {
            addRow();
            rowCount++;
            updateRowCountInput();
        });

        function addRow() {
            var formId = "InscriptionText_" + rowCount;
            var rowId = "InscriptionText_" + rowCount;

            // Create a new form element
            var newForm =
                '<form class="ajax-form" id="' + formId + '">' +
                '<input type="hidden" name="' + rowId + '.LineNumber" value="' + rowCount + '" />' +
                '@Html.AntiForgeryToken()' +
                '@Html.HiddenFor(model => model.InscriptionID)' +
                '<table>' +
                '<tr>' +
                '<td style="width:50px">' +
                '@Html.EditorFor(model => model.LineNumber, new { htmlAttributes = new { @class = "linenumber-textbox" } })' +
                '@Html.ValidationMessageFor(model => model.LineNumber, "", new { @class = "text-danger" })' +
                '</td>' +
                '<td>' +
                '@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control line-textbox" } })' +
                '@Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })' +
                '</td>' +
                '</tr>' +
                '</table>' +
                '</form>';

            // Append the new form
            $("#externalForm").append(newForm);
            rowCount++;

            updateRowCountInput();
        }

        function updateRowCountInput() {
            $("#RowCount").val(rowCount);
        }


        

    });
</script>

<style>
    .linenumber-textbox {
        width: 40px; /* Set the desired width */
        height: 35px; /* Set the desired height */
        display: block;
        padding: 0.1rem 0.3rem;
        color: #222;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.375rem;
        /* Add any other custom styling properties you need */
    }

    .line-textbox {
        width: 500px; /* Allow the width to grow */
        max-width: 500px; /* Set a maximum width */
        line-height: 1.5;
        resize: both; /* Allow both horizontal and vertical resizing */
        overflow: auto;
    }
</style>

@using (Html.BeginForm("Create", "InscriptionText", FormMethod.Post, new { @id = "InscriptionText", @class = "ajax-form" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.InscriptionID)
    @Html.HiddenFor(model => model.Row, new { id = "RowCount" })

    <table>
        <tr class="form-group">
            <td width="30px">
                Line#
            </td>
            <td style="padding-left: 2px;">
                Text
            </td>
        </tr>
        <tbody id="dataRow">
            <tr>
                <td style="width:50px">
                    @Html.EditorFor(model => model.LineNumber, new { htmlAttributes = new { @class = "linenumber-textbox" } })
                    @Html.ValidationMessageFor(model => model.LineNumber, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control line-textbox" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </td>
            </tr>
        </tbody>
    </table>
}
<div id="externalForm">
    <!-- Append new rows here -->
</div>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10" style="padding:3px;">
        <button id="addRowBtn" type="button">Add Row</button>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

